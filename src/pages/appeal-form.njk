{% extends "__layout.njk" %}

{% block Link %}
	<link rel="stylesheet" href="css/flatpickr.min.css">
	{# <link rel="stylesheet" href="css/filepond.min.css"> #}
{% endblock %}

{% block Header %}
	{% include "include/blue-line.njk" %}
	<div class="breadcrumbs">
		<div class="container">
			<ul class="breadcrumbs__list">
				<li class="breadcrumbs__item">
					<a href="" class="breadcrumbs__link">Главная</a>
					<svg>
						<use xlink:href="img/sprite.svg#svg--arrow-two">
					</svg>
				</li>
				<li class="breadcrumbs__item">
					<a href="" class="breadcrumbs__link">Пункт меню</a>
					<svg>
						<use xlink:href="img/sprite.svg#svg--arrow-two">
					</svg>
				</li>
				<li class="breadcrumbs__item">
					<a href="" class="breadcrumbs__link">Пункт меню</a>
					<svg>
						<use xlink:href="img/sprite.svg#svg--arrow-two">
					</svg>
				</li>
				<li class="breadcrumbs__item">
					<span class="breadcrumbs__link">Обращение</span>
				</li>
			</ul>
		</div>
	</div>
{% endblock %}

{% block Content %}
	<section class="content-page">
		<div class="container">			
			<div class="center-area-one center-area-one--change-two end-sect">
				<div class="row-title">
					<h2 class="title">Обращение</h2>
				</div>
				<div class="form-over">
					<form enctype="multipart/form-data" action="/upload/image" method="post" class="form-over__form">
						<div class="form-over__area">
							<p><b>Поля, отмеченные звездочкой <span class="red"><b>*</b></span>, обязательны для заполнения.</b></p>
							<span>Ответ автору обращения, запроса может быть направлен в форме электронного документа (при наличии адреса электронной почты) или в письменной форме (при наличии корректного почтового адреса).</span>
						</div>
						<div class="form-over__row">
							<div class="form-over__wrap-title">
								<h3>Направить ответ</h3>
							</div>
							<div class="form-over__grid">
								<div class="wrap-field-check">
									<label>
										<input type="radio" name="type-email" checked>
										<div class="wrap-field-check__field">
											<span class="wrap-field-check__icon"></span>
											<span class="wrap-field__description">В электронной форме</span>
										</div>
									</label>
								</div>
								<div class="wrap-field-check">
									<label>
										<input type="radio" name="type-email">
										<div class="wrap-field-check__field">
											<span class="wrap-field-check__icon"></span>
											<span class="wrap-field__description">В письменной форме</span>
										</div>
									</label>
								</div>
							</div>
						</div>
						<div class="form-over__row">
							<div class="form-over__wrap-title">
								<h3>Персональные данные</h3>
							</div>
							<div class="form-over__grid form-over__grid--change">
								{{ mixin.fieldText('Фамилия', '*', 'Введите Вашу Фамилию', 'data-name=Фамилия') }}
								<div class="wrap-field">
									<label>
										<span class="wrap-field__description">Телефон<span class="red">*</span>:</span>
										<span class="error-text">Ошибка: заполните поле</span>
										<input type="tel" class="wrap-field__field" name="phone" placeholder="Необходим для связи с Вами" data-name="Телефон">
									</label>
								</div>
								{{ mixin.fieldText('Имя', '*', 'Введите Ваше Имя', 'data-name=Имя') }}
								{{ mixin.fieldText('E-mail', '*', 'Нужен для отправки ответа', 'data-name=E-mail') }}
								{{ mixin.fieldText('Отчество', '*', 'Введите Отчество если есть', 'data-name=Отчество') }}
							</div>
						</div>
						<div class="form-over__row">
							<div class="form-over__wrap-title">
								<h3>Почтовый адрес</h3>
							</div>
							<div class="form-over__grid">
								{{ mixin.fieldText('Индекс', '', '') }}
							</div>
							{{ mixin.fieldText('Город', '', '') }}
							{{ mixin.fieldText('Район', '', '') }}
							{{ mixin.fieldText('Улица', '', '') }}
							<div class="form-over__grid">
								{{ mixin.fieldText('Дом/корпус', '', '') }}
								{{ mixin.fieldText('Квартира', '', '') }}
							</div>
						</div>
						<div class="block-accordions border-block">
							<div class="accordion radio-accordions" data-radio-wrapper>
								<div class="accordion__up accordion-js">
									<div class="accordion__wrap-text">
										<span class="accordion__caption">Выберите адресата вашего обращения</span>
										<span class="error-text">Ошибка: заполните поле</span>
									</div>
									<svg>
										<use xlink:href="img/sprite.svg#svg--arrow-two">
									</svg>
								</div>
								<div class="accordion__down">
									<div class="accordion__content">
										<div class="accordion__wrap">
											<div class="accordion__offset">
												<label class="radio-wrap">
													<input type="radio" name="addressee" value="test" data-radio>
													<div class="radio-wrap__block">
														<div class="radio-wrap__icon"></div>
														{{ mixin.smRowHumanTwo('Первышов Евгений Алексеевич', 'Глава муниципального образования город Краснодар') }}
													</div>
												</label>
												<label class="radio-wrap">
													<input type="radio" name="addressee" value="test" data-radio>
													<div class="radio-wrap__block">
														<div class="radio-wrap__icon"></div>
														{{ mixin.smRowHumanTwo('Галушко Вера Федоровна', 'Председатель городской Думы Краснодара') }}
													</div>
												</label>
											</div>
										</div>
										<div class="accordion__wrap">
											<h4 class="accordion__title accordion__title--change">Заместители главы МО город Краснодар:</h4>
											<div class="accordion__offset">
												<label class="radio-wrap">
													<input type="radio" name="addressee" value="test" data-radio>
													<div class="radio-wrap__block">
														<div class="radio-wrap__icon"></div>
														{{ mixin.smRowHumanTwo('Первышов Евгений Алексеевич', 'Глава муниципального образования город Краснодар') }}
													</div>
												</label>
												<label class="radio-wrap">
													<input type="radio" name="addressee" value="test" data-radio>
													<div class="radio-wrap__block">
														<div class="radio-wrap__icon"></div>
														{{ mixin.smRowHumanTwo('Галушко Вера Федоровна', 'Председатель городской Думы Краснодара') }}
													</div>
												</label>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
						<div class="form-over__row">
							<div class="form-over__wrap-title">
								<h3>Текст вашего обращения<span class="red">*</span></h3>
							</div>
							<div class="wrap-field">
								<label>
									<span class="error-text">Ошибка: заполните поле</span>
									<textarea class="wrap-field__textarea" name='textarea' placeholder="Напишите Ваше обращение" data-name="Текст вашего обращения"></textarea>
								</label>
							</div>
						</div>
						<div class="form-over__row">
							<div class="form-over__wrap-title">
								<h3>Прикрепить файл<span>**</span></h3>
							</div>
							<div class="attach-file">
								<label class="download-file attach-file__block">
									<div class="btn-white" type="submit">
										<span class="btn-white__text">Выберите файл</span>
									</div>
									<input id="filePush" class="filepond" type="file" multiple>
									<div class="attach-file__block"></div>
								</label>
							</div>
						</div>
						<div class="form-over__area">
							<p>
								<span>Ответ автору обращения, запроса может быть направлен в форме электронного документа (при наличии адреса электронной почты) или в письменной форме (при наличии корректного почтового адреса).</span>
							</p>
							<p>
								<span>Безопасность передаваемых данных подтверждена сертификатом безопасности.</span>
							</p>
						</div>
						<div class="form-over__border">
							<div class="form-over__wrap-btn">
								<div class="btn-white" data-btn-clear>
									<span class="btn-white__text">Очистить</span>
								</div>
								<div class="btn-white">
									<span class="btn-white__text">Сохранить</span>
								</div>
								<button type="submit" class="btn-block">
									<span class="btn-block__text">Отправить</span>
								</button>
							</div>
						</div>
						<div class="form-over__area">
							<p><span>**</span> - Гарантированная передача файла(ов) вложения на почтовый сервер зависит от пропускной способности сети «Интернет» пользователя, а получение – от объёма обрабатываемых почтовым сервером переданных файлов.</p>
							<p>При подключении оборудования пользователя к сети «Интернет» по выделенным каналам связи с использованием технологий ADSL, 3G, 4G, WiFi и иных технологий, обеспечивающих аналогичные скорости передачи данных в сети «Интернет», передача и обработка файла(ов) с суммарным размером:</p>
							<ul>
								<li>до 5 Мб осуществляется, как правило, без задержки во времени;</li>
								<li>от 5 Мб до 10 Мб может осуществляться с задержкой во времени;</li>
								<li>свыше 10 Мб может быть не осуществлена.</li>
							</ul>
							<p>Вложения документов и материалов, которые не удается отправить (передать и обработать), рекомендуется направлять в соответствии с ч. 3 ст. 7 Федерального закона от 2 мая 2006 года № 59-ФЗ «О порядке рассмотрения обращений граждан Российской Федерации» почтовой связью, сообщив об этом в тексте обращения в форме электронного документа.</p>
							<p>Если в направленном Вами тексте в форме электронного документа, содержащемся в поле ввода текста обращения в форме электронного документа, не изложено предложение, заявление или жалоба, а только ссылка на приложение (файл вложение) либо на контент интернет-сайта, то в ответе разъясняется порядок его рассмотрения, установленный Федеральным законом от 2 мая 2006 года № 59 «О порядке рассмотрения обращений граждан Российской Федерации».</p>
							<p>Допустимы следующие форматы файлов: txt, doc, docx, rtf, xls, xlsx, pps, ppt, pdf, jpg, bmp, png, tif, pcx, odt.</p>
						</div>
					</form>
				</div>
			</div>
		</div>
	</section>
	{% include "include/modal.njk" %}
{% endblock %}

{% block Scripts %}
	<script src="js/inputmask.js"></script>
	<script src="js/filepond.min.js"></script>
	<script src="js/filepond-plugin-file-encode.js"></script>
	<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
	<script>
		const accUp = new Accordion(".accordion__up");

		accUp.createAccordion();

		Inputmask("(999) 999-99-99").mask("[type='tel']");

		const inputElement  = document.querySelector('input[type="file"]');
		const pond = FilePond.create(
			inputElement, {
				allowDrop: false,
				allowPaste: false,
				allowReplace: false,
				allowRevert: false,
				allowProcess: false,
				onupdatefiles: (files) => {					
					const textAddFile = document.querySelector(".filepond--drop-label");
					if (files.length === 0) {
						textAddFile.style.display = 'block';
					} else {
						textAddFile.style.display = 'none';
					}
				},
			}
		);
		
		document.querySelector(".filepond--credits").remove();


		// Проверка формы на заполненость и очистка при нажатии на кнопку
		const formAppeal = document.querySelector(".form-over__form");

		// Проверка формы на заполненость
		formAppeal.addEventListener("submit", function (event) {
			event.preventDefault();
			let checkCurent = 0;
			let arrSuccessful = [];
			const form = document.querySelector('.form-over');
			const arrInpute = document.querySelectorAll(".wrap-field");
			const arrRadio = document.querySelectorAll("[data-radio]");
			const formCallAction = form.getAttribute('action');

			//console.log(arrInpute);
			arrInpute.forEach(function(i) {
				let fieldSuccessful = {
					nameField: '',
					//successful: false,
					nameInput: '',
					value: '',
				};

				if ( i.querySelector('input') ) {

					fieldSuccessful.nameField = i.querySelector('input').dataset.name;
					fieldSuccessful.nameInput = i.querySelector('input').getAttribute('name');
					fieldSuccessful.value = i.querySelector('input').value;

					if ( i.querySelector('input').dataset.name ) {
						fieldSuccessful.important = true;

						//console.log("Важный input");
						if ( i.querySelector('input').value == '' ) {
							i.classList.add("errow-field");
							fieldSuccessful.successful = false;
						} else {
							i.classList.remove("errow-field");
							fieldSuccessful.successful = true;
						}

					} else {
						//console.log("Не важный input");
					}
				} else if ( i.querySelector('textarea').dataset.name ) {
					fieldSuccessful.nameField = i.querySelector('textarea').dataset.name;
					fieldSuccessful.nameInput = i.querySelector('textarea').getAttribute('name');
					fieldSuccessful.value = i.querySelector('textarea').value;
					fieldSuccessful.important = true;

					if (i.querySelector('textarea').value == '') {
						i.closest('.form-over__row').classList.add("errow-field");
						fieldSuccessful.successful = false;
					} else {
						i.closest('.form-over__row').classList.remove("errow-field");
						fieldSuccessful.successful = true;
					}
				};

				//console.log(fieldSuccessful);
				arrSuccessful.push(fieldSuccessful);
			});

			(function() {
				let fieldSuccessful = {
					nameField: '',
					successful: false,
					destination: '',
					value: '',
				};

				fieldSuccessful.nameField = document.querySelector("[data-radio-wrapper]").querySelector(".accordion__caption").textContent;

				for (let i = 0; i < arrRadio.length; i++) {
					fieldSuccessful.important = true;
					if (arrRadio[i].checked) {
						const wrapRadio = arrRadio[i].closest('.radio-wrap');
						//console.log("Выбран адресат");
						fieldSuccessful.successful = true;
						fieldSuccessful.destination = wrapRadio.querySelector('input').getAttribute('name');
						fieldSuccessful.value = wrapRadio.querySelector('input').getAttribute('value');
						break;
					} else {
						//console.log("Не выбран адресат");
						fieldSuccessful.successful = false;
					}
				};

				if (!fieldSuccessful.successful) {
					document.querySelector("[data-radio-wrapper]").classList.add("errow-field");
				} else {
					document.querySelector("[data-radio-wrapper]").classList.remove("errow-field");
				}

				arrSuccessful.push(fieldSuccessful);
			})();

			for (let i = 0; i < arrSuccessful.length; i++) {
				if (arrSuccessful[i].important && !arrSuccessful[i].successful) {
					console.log(arrSuccessful[i].nameField + ": не заполнено!");
					checkCurent = 0;
					break;
				} else {
					checkCurent = 1;
				};
			};
			
			if (checkCurent === 1) {
				console.log(arrSuccessful);
				console.log('Форма отправится');
				axios({
					method: 'post',
					url: formCallAction,
					data: {arrSuccessful}
				}).then(function (response) {
					console.log(response);
				}).catch(function (error) {
					console.log(error);
				});
			}
		});
		// Проверка формы на заполненость--конец

		// Очистка при нажатии на кнопку

		(function() {
			const btnClear = document.querySelector("[data-btn-clear]");

			btnClear.addEventListener("click", function(event) {				
				const arrInput = formAppeal.querySelectorAll("input");
				const arrErrow = formAppeal.querySelectorAll(".errow-field");
				arrInput.forEach(function(item) {
					if(item.getAttribute("type") === "radio") {
						item.checked = false;
					} else {
						item.value = "";
					};
				});
				arrErrow.forEach(function(item) {
					item.classList.remove("errow-field");
				});
				formAppeal.querySelector("textarea").value = "";
				pond.removeFiles();
			});
		})();

		// Очистка при нажатии на кнопку -- конец

		// Проверка формы на заполненость и очистка при нажатии на кнопку --- конец
	</script>
{% endblock %}